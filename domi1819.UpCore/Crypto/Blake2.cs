using System;
using System.Security.Cryptography;

namespace domi1819.UpCore.Crypto
{
    public class Blake2
    {
        private const int BlockLength = 128;

        private const ulong Iv0 = 0x6A09E667F3BCC908;
        private const ulong Iv1 = 0xBB67AE8584CAA73B;
        private const ulong Iv2 = 0x3C6EF372FE94F82B;
        private const ulong Iv3 = 0xA54FF53A5F1D36F1;
        private const ulong Iv4 = 0x510E527FADE682D1;
        private const ulong Iv5 = 0x9B05688C2B3E6C1F;
        private const ulong Iv6 = 0x1F83D9ABFB41BD6B;
        private const ulong Iv7 = 0x5BE0CD19137E2179;

        /// <summary>
        /// Calculate the Blake2b hash value of a given message.
        /// </summary>
        /// <param name="message">The message to hash.</param>
        /// <param name="hashSize">The desired hash size in bytes (Range 1..64).</param>
        /// <param name="key">An optional key (0..64 bytes).</param>
        /// <returns>The hash result bytes.</returns>
        public static byte[] Hash(byte[] message, byte hashSize = 64, byte[] key = null)
        {
            if (hashSize == 0)
            {
                throw new CryptographicException("Hash size may not be 0 bytes.");
            }

            if (hashSize > 64)
            {
                throw new CryptographicException("Hash size may not exceed 64 bytes.");
            }

            if (key != null && key.Length > 64)
            {
                throw new CryptographicException("Key size may not exceed 64 bytes.");
            }

            ulong[] state = new ulong[8];

            state[0] = Iv0 ^ (ulong)(0x01010000 | hashSize);
            state[1] = Iv1;
            state[2] = Iv2;
            state[3] = Iv3;
            state[4] = Iv4;
            state[5] = Iv5;
            state[6] = Iv6;
            state[7] = Iv7;

            ulong[] block = new ulong[16];

            int bytesCompressed = 0;
            int bytesCompressedOffset = 0;
            int bytesRemaining = message.Length;

            if (key != null && key.Length > 0)
            {
                state[0] ^= (ulong)(key.Length << 8);
                
                Buffer.BlockCopy(key, 0, block, 0, key.Length);

                bytesCompressedOffset = BlockLength;

                Compress(state, block, bytesCompressedOffset, false);
            }

            while (bytesRemaining > BlockLength)
            {
                Buffer.BlockCopy(message, bytesCompressed, block, 0, BlockLength);

                bytesCompressed += BlockLength;
                bytesRemaining -= BlockLength;

                Compress(state, block, bytesCompressed + bytesCompressedOffset, false);
            }

            Array.Clear(block, 0, block.Length);
            Buffer.BlockCopy(message, bytesCompressed, block, 0, bytesRemaining);

            bytesCompressed += bytesRemaining;

            Compress(state, block, bytesCompressed + bytesCompressedOffset, true);

            byte[] hash = new byte[hashSize];
            
            Buffer.BlockCopy(state, 0, hash, 0, hashSize);

            return hash;
        }
        
        private static void Compress(ulong[] state, ulong[] block, int position, bool lastBlock)
        {
            ulong v0 = state[0];
            ulong v1 = state[1];
            ulong v2 = state[2];
            ulong v3 = state[3];
            ulong v4 = state[4];
            ulong v5 = state[5];
            ulong v6 = state[6];
            ulong v7 = state[7];
            ulong v8 = Iv0;
            ulong v9 = Iv1;
            ulong v10 = Iv2;
            ulong v11 = Iv3;
            ulong v12 = Iv4 ^ (ulong)position;
            ulong v13 = Iv5;
            ulong v14 = Iv6;
            ulong v15 = Iv7;

            if (lastBlock)
            {
                v14 ^= 0xFFFFFFFFFFFFFFFF;
            }

            // Round 1
            v0 = v0 + v4 + block[0];
            v12 ^= v0;
            v12 = ((v12 >> 32) | (v12 << (64 - 32)));
            v8 = v8 + v12;
            v4 ^= v8;
            v4 = ((v4 >> 24) | (v4 << (64 - 24)));
            v0 = v0 + v4 + block[1];
            v12 ^= v0;
            v12 = ((v12 >> 16) | (v12 << (64 - 16)));
            v8 = v8 + v12;
            v4 ^= v8;
            v4 = ((v4 >> 63) | (v4 << (64 - 63)));

            v1 = v1 + v5 + block[2];
            v13 ^= v1;
            v13 = ((v13 >> 32) | (v13 << (64 - 32)));
            v9 = v9 + v13;
            v5 ^= v9;
            v5 = ((v5 >> 24) | (v5 << (64 - 24)));
            v1 = v1 + v5 + block[3];
            v13 ^= v1;
            v13 = ((v13 >> 16) | (v13 << (64 - 16)));
            v9 = v9 + v13;
            v5 ^= v9;
            v5 = ((v5 >> 63) | (v5 << (64 - 63)));

            v2 = v2 + v6 + block[4];
            v14 ^= v2;
            v14 = ((v14 >> 32) | (v14 << (64 - 32)));
            v10 = v10 + v14;
            v6 ^= v10;
            v6 = ((v6 >> 24) | (v6 << (64 - 24)));
            v2 = v2 + v6 + block[5];
            v14 ^= v2;
            v14 = ((v14 >> 16) | (v14 << (64 - 16)));
            v10 = v10 + v14;
            v6 ^= v10;
            v6 = ((v6 >> 63) | (v6 << (64 - 63)));

            v3 = v3 + v7 + block[6];
            v15 ^= v3;
            v15 = ((v15 >> 32) | (v15 << (64 - 32)));
            v11 = v11 + v15;
            v7 ^= v11;
            v7 = ((v7 >> 24) | (v7 << (64 - 24)));
            v3 = v3 + v7 + block[7];
            v15 ^= v3;
            v15 = ((v15 >> 16) | (v15 << (64 - 16)));
            v11 = v11 + v15;
            v7 ^= v11;
            v7 = ((v7 >> 63) | (v7 << (64 - 63)));

            v0 = v0 + v5 + block[8];
            v15 ^= v0;
            v15 = ((v15 >> 32) | (v15 << (64 - 32)));
            v10 = v10 + v15;
            v5 ^= v10;
            v5 = ((v5 >> 24) | (v5 << (64 - 24)));
            v0 = v0 + v5 + block[9];
            v15 ^= v0;
            v15 = ((v15 >> 16) | (v15 << (64 - 16)));
            v10 = v10 + v15;
            v5 ^= v10;
            v5 = ((v5 >> 63) | (v5 << (64 - 63)));

            v1 = v1 + v6 + block[10];
            v12 ^= v1;
            v12 = ((v12 >> 32) | (v12 << (64 - 32)));
            v11 = v11 + v12;
            v6 ^= v11;
            v6 = ((v6 >> 24) | (v6 << (64 - 24)));
            v1 = v1 + v6 + block[11];
            v12 ^= v1;
            v12 = ((v12 >> 16) | (v12 << (64 - 16)));
            v11 = v11 + v12;
            v6 ^= v11;
            v6 = ((v6 >> 63) | (v6 << (64 - 63)));

            v2 = v2 + v7 + block[12];
            v13 ^= v2;
            v13 = ((v13 >> 32) | (v13 << (64 - 32)));
            v8 = v8 + v13;
            v7 ^= v8;
            v7 = ((v7 >> 24) | (v7 << (64 - 24)));
            v2 = v2 + v7 + block[13];
            v13 ^= v2;
            v13 = ((v13 >> 16) | (v13 << (64 - 16)));
            v8 = v8 + v13;
            v7 ^= v8;
            v7 = ((v7 >> 63) | (v7 << (64 - 63)));

            v3 = v3 + v4 + block[14];
            v14 ^= v3;
            v14 = ((v14 >> 32) | (v14 << (64 - 32)));
            v9 = v9 + v14;
            v4 ^= v9;
            v4 = ((v4 >> 24) | (v4 << (64 - 24)));
            v3 = v3 + v4 + block[15];
            v14 ^= v3;
            v14 = ((v14 >> 16) | (v14 << (64 - 16)));
            v9 = v9 + v14;
            v4 ^= v9;
            v4 = ((v4 >> 63) | (v4 << (64 - 63)));

            // Round 2
            v0 = v0 + v4 + block[14];
            v12 ^= v0;
            v12 = ((v12 >> 32) | (v12 << (64 - 32)));
            v8 = v8 + v12;
            v4 ^= v8;
            v4 = ((v4 >> 24) | (v4 << (64 - 24)));
            v0 = v0 + v4 + block[10];
            v12 ^= v0;
            v12 = ((v12 >> 16) | (v12 << (64 - 16)));
            v8 = v8 + v12;
            v4 ^= v8;
            v4 = ((v4 >> 63) | (v4 << (64 - 63)));

            v1 = v1 + v5 + block[4];
            v13 ^= v1;
            v13 = ((v13 >> 32) | (v13 << (64 - 32)));
            v9 = v9 + v13;
            v5 ^= v9;
            v5 = ((v5 >> 24) | (v5 << (64 - 24)));
            v1 = v1 + v5 + block[8];
            v13 ^= v1;
            v13 = ((v13 >> 16) | (v13 << (64 - 16)));
            v9 = v9 + v13;
            v5 ^= v9;
            v5 = ((v5 >> 63) | (v5 << (64 - 63)));

            v2 = v2 + v6 + block[9];
            v14 ^= v2;
            v14 = ((v14 >> 32) | (v14 << (64 - 32)));
            v10 = v10 + v14;
            v6 ^= v10;
            v6 = ((v6 >> 24) | (v6 << (64 - 24)));
            v2 = v2 + v6 + block[15];
            v14 ^= v2;
            v14 = ((v14 >> 16) | (v14 << (64 - 16)));
            v10 = v10 + v14;
            v6 ^= v10;
            v6 = ((v6 >> 63) | (v6 << (64 - 63)));

            v3 = v3 + v7 + block[13];
            v15 ^= v3;
            v15 = ((v15 >> 32) | (v15 << (64 - 32)));
            v11 = v11 + v15;
            v7 ^= v11;
            v7 = ((v7 >> 24) | (v7 << (64 - 24)));
            v3 = v3 + v7 + block[6];
            v15 ^= v3;
            v15 = ((v15 >> 16) | (v15 << (64 - 16)));
            v11 = v11 + v15;
            v7 ^= v11;
            v7 = ((v7 >> 63) | (v7 << (64 - 63)));

            v0 = v0 + v5 + block[1];
            v15 ^= v0;
            v15 = ((v15 >> 32) | (v15 << (64 - 32)));
            v10 = v10 + v15;
            v5 ^= v10;
            v5 = ((v5 >> 24) | (v5 << (64 - 24)));
            v0 = v0 + v5 + block[12];
            v15 ^= v0;
            v15 = ((v15 >> 16) | (v15 << (64 - 16)));
            v10 = v10 + v15;
            v5 ^= v10;
            v5 = ((v5 >> 63) | (v5 << (64 - 63)));

            v1 = v1 + v6 + block[0];
            v12 ^= v1;
            v12 = ((v12 >> 32) | (v12 << (64 - 32)));
            v11 = v11 + v12;
            v6 ^= v11;
            v6 = ((v6 >> 24) | (v6 << (64 - 24)));
            v1 = v1 + v6 + block[2];
            v12 ^= v1;
            v12 = ((v12 >> 16) | (v12 << (64 - 16)));
            v11 = v11 + v12;
            v6 ^= v11;
            v6 = ((v6 >> 63) | (v6 << (64 - 63)));

            v2 = v2 + v7 + block[11];
            v13 ^= v2;
            v13 = ((v13 >> 32) | (v13 << (64 - 32)));
            v8 = v8 + v13;
            v7 ^= v8;
            v7 = ((v7 >> 24) | (v7 << (64 - 24)));
            v2 = v2 + v7 + block[7];
            v13 ^= v2;
            v13 = ((v13 >> 16) | (v13 << (64 - 16)));
            v8 = v8 + v13;
            v7 ^= v8;
            v7 = ((v7 >> 63) | (v7 << (64 - 63)));

            v3 = v3 + v4 + block[5];
            v14 ^= v3;
            v14 = ((v14 >> 32) | (v14 << (64 - 32)));
            v9 = v9 + v14;
            v4 ^= v9;
            v4 = ((v4 >> 24) | (v4 << (64 - 24)));
            v3 = v3 + v4 + block[3];
            v14 ^= v3;
            v14 = ((v14 >> 16) | (v14 << (64 - 16)));
            v9 = v9 + v14;
            v4 ^= v9;
            v4 = ((v4 >> 63) | (v4 << (64 - 63)));

            // Round 3
            v0 = v0 + v4 + block[11];
            v12 ^= v0;
            v12 = ((v12 >> 32) | (v12 << (64 - 32)));
            v8 = v8 + v12;
            v4 ^= v8;
            v4 = ((v4 >> 24) | (v4 << (64 - 24)));
            v0 = v0 + v4 + block[8];
            v12 ^= v0;
            v12 = ((v12 >> 16) | (v12 << (64 - 16)));
            v8 = v8 + v12;
            v4 ^= v8;
            v4 = ((v4 >> 63) | (v4 << (64 - 63)));

            v1 = v1 + v5 + block[12];
            v13 ^= v1;
            v13 = ((v13 >> 32) | (v13 << (64 - 32)));
            v9 = v9 + v13;
            v5 ^= v9;
            v5 = ((v5 >> 24) | (v5 << (64 - 24)));
            v1 = v1 + v5 + block[0];
            v13 ^= v1;
            v13 = ((v13 >> 16) | (v13 << (64 - 16)));
            v9 = v9 + v13;
            v5 ^= v9;
            v5 = ((v5 >> 63) | (v5 << (64 - 63)));

            v2 = v2 + v6 + block[5];
            v14 ^= v2;
            v14 = ((v14 >> 32) | (v14 << (64 - 32)));
            v10 = v10 + v14;
            v6 ^= v10;
            v6 = ((v6 >> 24) | (v6 << (64 - 24)));
            v2 = v2 + v6 + block[2];
            v14 ^= v2;
            v14 = ((v14 >> 16) | (v14 << (64 - 16)));
            v10 = v10 + v14;
            v6 ^= v10;
            v6 = ((v6 >> 63) | (v6 << (64 - 63)));

            v3 = v3 + v7 + block[15];
            v15 ^= v3;
            v15 = ((v15 >> 32) | (v15 << (64 - 32)));
            v11 = v11 + v15;
            v7 ^= v11;
            v7 = ((v7 >> 24) | (v7 << (64 - 24)));
            v3 = v3 + v7 + block[13];
            v15 ^= v3;
            v15 = ((v15 >> 16) | (v15 << (64 - 16)));
            v11 = v11 + v15;
            v7 ^= v11;
            v7 = ((v7 >> 63) | (v7 << (64 - 63)));

            v0 = v0 + v5 + block[10];
            v15 ^= v0;
            v15 = ((v15 >> 32) | (v15 << (64 - 32)));
            v10 = v10 + v15;
            v5 ^= v10;
            v5 = ((v5 >> 24) | (v5 << (64 - 24)));
            v0 = v0 + v5 + block[14];
            v15 ^= v0;
            v15 = ((v15 >> 16) | (v15 << (64 - 16)));
            v10 = v10 + v15;
            v5 ^= v10;
            v5 = ((v5 >> 63) | (v5 << (64 - 63)));

            v1 = v1 + v6 + block[3];
            v12 ^= v1;
            v12 = ((v12 >> 32) | (v12 << (64 - 32)));
            v11 = v11 + v12;
            v6 ^= v11;
            v6 = ((v6 >> 24) | (v6 << (64 - 24)));
            v1 = v1 + v6 + block[6];
            v12 ^= v1;
            v12 = ((v12 >> 16) | (v12 << (64 - 16)));
            v11 = v11 + v12;
            v6 ^= v11;
            v6 = ((v6 >> 63) | (v6 << (64 - 63)));

            v2 = v2 + v7 + block[7];
            v13 ^= v2;
            v13 = ((v13 >> 32) | (v13 << (64 - 32)));
            v8 = v8 + v13;
            v7 ^= v8;
            v7 = ((v7 >> 24) | (v7 << (64 - 24)));
            v2 = v2 + v7 + block[1];
            v13 ^= v2;
            v13 = ((v13 >> 16) | (v13 << (64 - 16)));
            v8 = v8 + v13;
            v7 ^= v8;
            v7 = ((v7 >> 63) | (v7 << (64 - 63)));

            v3 = v3 + v4 + block[9];
            v14 ^= v3;
            v14 = ((v14 >> 32) | (v14 << (64 - 32)));
            v9 = v9 + v14;
            v4 ^= v9;
            v4 = ((v4 >> 24) | (v4 << (64 - 24)));
            v3 = v3 + v4 + block[4];
            v14 ^= v3;
            v14 = ((v14 >> 16) | (v14 << (64 - 16)));
            v9 = v9 + v14;
            v4 ^= v9;
            v4 = ((v4 >> 63) | (v4 << (64 - 63)));

            // Round 4
            v0 = v0 + v4 + block[7];
            v12 ^= v0;
            v12 = ((v12 >> 32) | (v12 << (64 - 32)));
            v8 = v8 + v12;
            v4 ^= v8;
            v4 = ((v4 >> 24) | (v4 << (64 - 24)));
            v0 = v0 + v4 + block[9];
            v12 ^= v0;
            v12 = ((v12 >> 16) | (v12 << (64 - 16)));
            v8 = v8 + v12;
            v4 ^= v8;
            v4 = ((v4 >> 63) | (v4 << (64 - 63)));

            v1 = v1 + v5 + block[3];
            v13 ^= v1;
            v13 = ((v13 >> 32) | (v13 << (64 - 32)));
            v9 = v9 + v13;
            v5 ^= v9;
            v5 = ((v5 >> 24) | (v5 << (64 - 24)));
            v1 = v1 + v5 + block[1];
            v13 ^= v1;
            v13 = ((v13 >> 16) | (v13 << (64 - 16)));
            v9 = v9 + v13;
            v5 ^= v9;
            v5 = ((v5 >> 63) | (v5 << (64 - 63)));

            v2 = v2 + v6 + block[13];
            v14 ^= v2;
            v14 = ((v14 >> 32) | (v14 << (64 - 32)));
            v10 = v10 + v14;
            v6 ^= v10;
            v6 = ((v6 >> 24) | (v6 << (64 - 24)));
            v2 = v2 + v6 + block[12];
            v14 ^= v2;
            v14 = ((v14 >> 16) | (v14 << (64 - 16)));
            v10 = v10 + v14;
            v6 ^= v10;
            v6 = ((v6 >> 63) | (v6 << (64 - 63)));

            v3 = v3 + v7 + block[11];
            v15 ^= v3;
            v15 = ((v15 >> 32) | (v15 << (64 - 32)));
            v11 = v11 + v15;
            v7 ^= v11;
            v7 = ((v7 >> 24) | (v7 << (64 - 24)));
            v3 = v3 + v7 + block[14];
            v15 ^= v3;
            v15 = ((v15 >> 16) | (v15 << (64 - 16)));
            v11 = v11 + v15;
            v7 ^= v11;
            v7 = ((v7 >> 63) | (v7 << (64 - 63)));

            v0 = v0 + v5 + block[2];
            v15 ^= v0;
            v15 = ((v15 >> 32) | (v15 << (64 - 32)));
            v10 = v10 + v15;
            v5 ^= v10;
            v5 = ((v5 >> 24) | (v5 << (64 - 24)));
            v0 = v0 + v5 + block[6];
            v15 ^= v0;
            v15 = ((v15 >> 16) | (v15 << (64 - 16)));
            v10 = v10 + v15;
            v5 ^= v10;
            v5 = ((v5 >> 63) | (v5 << (64 - 63)));

            v1 = v1 + v6 + block[5];
            v12 ^= v1;
            v12 = ((v12 >> 32) | (v12 << (64 - 32)));
            v11 = v11 + v12;
            v6 ^= v11;
            v6 = ((v6 >> 24) | (v6 << (64 - 24)));
            v1 = v1 + v6 + block[10];
            v12 ^= v1;
            v12 = ((v12 >> 16) | (v12 << (64 - 16)));
            v11 = v11 + v12;
            v6 ^= v11;
            v6 = ((v6 >> 63) | (v6 << (64 - 63)));

            v2 = v2 + v7 + block[4];
            v13 ^= v2;
            v13 = ((v13 >> 32) | (v13 << (64 - 32)));
            v8 = v8 + v13;
            v7 ^= v8;
            v7 = ((v7 >> 24) | (v7 << (64 - 24)));
            v2 = v2 + v7 + block[0];
            v13 ^= v2;
            v13 = ((v13 >> 16) | (v13 << (64 - 16)));
            v8 = v8 + v13;
            v7 ^= v8;
            v7 = ((v7 >> 63) | (v7 << (64 - 63)));

            v3 = v3 + v4 + block[15];
            v14 ^= v3;
            v14 = ((v14 >> 32) | (v14 << (64 - 32)));
            v9 = v9 + v14;
            v4 ^= v9;
            v4 = ((v4 >> 24) | (v4 << (64 - 24)));
            v3 = v3 + v4 + block[8];
            v14 ^= v3;
            v14 = ((v14 >> 16) | (v14 << (64 - 16)));
            v9 = v9 + v14;
            v4 ^= v9;
            v4 = ((v4 >> 63) | (v4 << (64 - 63)));

            // Round 5
            v0 = v0 + v4 + block[9];
            v12 ^= v0;
            v12 = ((v12 >> 32) | (v12 << (64 - 32)));
            v8 = v8 + v12;
            v4 ^= v8;
            v4 = ((v4 >> 24) | (v4 << (64 - 24)));
            v0 = v0 + v4 + block[0];
            v12 ^= v0;
            v12 = ((v12 >> 16) | (v12 << (64 - 16)));
            v8 = v8 + v12;
            v4 ^= v8;
            v4 = ((v4 >> 63) | (v4 << (64 - 63)));

            v1 = v1 + v5 + block[5];
            v13 ^= v1;
            v13 = ((v13 >> 32) | (v13 << (64 - 32)));
            v9 = v9 + v13;
            v5 ^= v9;
            v5 = ((v5 >> 24) | (v5 << (64 - 24)));
            v1 = v1 + v5 + block[7];
            v13 ^= v1;
            v13 = ((v13 >> 16) | (v13 << (64 - 16)));
            v9 = v9 + v13;
            v5 ^= v9;
            v5 = ((v5 >> 63) | (v5 << (64 - 63)));

            v2 = v2 + v6 + block[2];
            v14 ^= v2;
            v14 = ((v14 >> 32) | (v14 << (64 - 32)));
            v10 = v10 + v14;
            v6 ^= v10;
            v6 = ((v6 >> 24) | (v6 << (64 - 24)));
            v2 = v2 + v6 + block[4];
            v14 ^= v2;
            v14 = ((v14 >> 16) | (v14 << (64 - 16)));
            v10 = v10 + v14;
            v6 ^= v10;
            v6 = ((v6 >> 63) | (v6 << (64 - 63)));

            v3 = v3 + v7 + block[10];
            v15 ^= v3;
            v15 = ((v15 >> 32) | (v15 << (64 - 32)));
            v11 = v11 + v15;
            v7 ^= v11;
            v7 = ((v7 >> 24) | (v7 << (64 - 24)));
            v3 = v3 + v7 + block[15];
            v15 ^= v3;
            v15 = ((v15 >> 16) | (v15 << (64 - 16)));
            v11 = v11 + v15;
            v7 ^= v11;
            v7 = ((v7 >> 63) | (v7 << (64 - 63)));

            v0 = v0 + v5 + block[14];
            v15 ^= v0;
            v15 = ((v15 >> 32) | (v15 << (64 - 32)));
            v10 = v10 + v15;
            v5 ^= v10;
            v5 = ((v5 >> 24) | (v5 << (64 - 24)));
            v0 = v0 + v5 + block[1];
            v15 ^= v0;
            v15 = ((v15 >> 16) | (v15 << (64 - 16)));
            v10 = v10 + v15;
            v5 ^= v10;
            v5 = ((v5 >> 63) | (v5 << (64 - 63)));

            v1 = v1 + v6 + block[11];
            v12 ^= v1;
            v12 = ((v12 >> 32) | (v12 << (64 - 32)));
            v11 = v11 + v12;
            v6 ^= v11;
            v6 = ((v6 >> 24) | (v6 << (64 - 24)));
            v1 = v1 + v6 + block[12];
            v12 ^= v1;
            v12 = ((v12 >> 16) | (v12 << (64 - 16)));
            v11 = v11 + v12;
            v6 ^= v11;
            v6 = ((v6 >> 63) | (v6 << (64 - 63)));

            v2 = v2 + v7 + block[6];
            v13 ^= v2;
            v13 = ((v13 >> 32) | (v13 << (64 - 32)));
            v8 = v8 + v13;
            v7 ^= v8;
            v7 = ((v7 >> 24) | (v7 << (64 - 24)));
            v2 = v2 + v7 + block[8];
            v13 ^= v2;
            v13 = ((v13 >> 16) | (v13 << (64 - 16)));
            v8 = v8 + v13;
            v7 ^= v8;
            v7 = ((v7 >> 63) | (v7 << (64 - 63)));

            v3 = v3 + v4 + block[3];
            v14 ^= v3;
            v14 = ((v14 >> 32) | (v14 << (64 - 32)));
            v9 = v9 + v14;
            v4 ^= v9;
            v4 = ((v4 >> 24) | (v4 << (64 - 24)));
            v3 = v3 + v4 + block[13];
            v14 ^= v3;
            v14 = ((v14 >> 16) | (v14 << (64 - 16)));
            v9 = v9 + v14;
            v4 ^= v9;
            v4 = ((v4 >> 63) | (v4 << (64 - 63)));

            // Round 6
            v0 = v0 + v4 + block[2];
            v12 ^= v0;
            v12 = ((v12 >> 32) | (v12 << (64 - 32)));
            v8 = v8 + v12;
            v4 ^= v8;
            v4 = ((v4 >> 24) | (v4 << (64 - 24)));
            v0 = v0 + v4 + block[12];
            v12 ^= v0;
            v12 = ((v12 >> 16) | (v12 << (64 - 16)));
            v8 = v8 + v12;
            v4 ^= v8;
            v4 = ((v4 >> 63) | (v4 << (64 - 63)));

            v1 = v1 + v5 + block[6];
            v13 ^= v1;
            v13 = ((v13 >> 32) | (v13 << (64 - 32)));
            v9 = v9 + v13;
            v5 ^= v9;
            v5 = ((v5 >> 24) | (v5 << (64 - 24)));
            v1 = v1 + v5 + block[10];
            v13 ^= v1;
            v13 = ((v13 >> 16) | (v13 << (64 - 16)));
            v9 = v9 + v13;
            v5 ^= v9;
            v5 = ((v5 >> 63) | (v5 << (64 - 63)));

            v2 = v2 + v6 + block[0];
            v14 ^= v2;
            v14 = ((v14 >> 32) | (v14 << (64 - 32)));
            v10 = v10 + v14;
            v6 ^= v10;
            v6 = ((v6 >> 24) | (v6 << (64 - 24)));
            v2 = v2 + v6 + block[11];
            v14 ^= v2;
            v14 = ((v14 >> 16) | (v14 << (64 - 16)));
            v10 = v10 + v14;
            v6 ^= v10;
            v6 = ((v6 >> 63) | (v6 << (64 - 63)));

            v3 = v3 + v7 + block[8];
            v15 ^= v3;
            v15 = ((v15 >> 32) | (v15 << (64 - 32)));
            v11 = v11 + v15;
            v7 ^= v11;
            v7 = ((v7 >> 24) | (v7 << (64 - 24)));
            v3 = v3 + v7 + block[3];
            v15 ^= v3;
            v15 = ((v15 >> 16) | (v15 << (64 - 16)));
            v11 = v11 + v15;
            v7 ^= v11;
            v7 = ((v7 >> 63) | (v7 << (64 - 63)));

            v0 = v0 + v5 + block[4];
            v15 ^= v0;
            v15 = ((v15 >> 32) | (v15 << (64 - 32)));
            v10 = v10 + v15;
            v5 ^= v10;
            v5 = ((v5 >> 24) | (v5 << (64 - 24)));
            v0 = v0 + v5 + block[13];
            v15 ^= v0;
            v15 = ((v15 >> 16) | (v15 << (64 - 16)));
            v10 = v10 + v15;
            v5 ^= v10;
            v5 = ((v5 >> 63) | (v5 << (64 - 63)));

            v1 = v1 + v6 + block[7];
            v12 ^= v1;
            v12 = ((v12 >> 32) | (v12 << (64 - 32)));
            v11 = v11 + v12;
            v6 ^= v11;
            v6 = ((v6 >> 24) | (v6 << (64 - 24)));
            v1 = v1 + v6 + block[5];
            v12 ^= v1;
            v12 = ((v12 >> 16) | (v12 << (64 - 16)));
            v11 = v11 + v12;
            v6 ^= v11;
            v6 = ((v6 >> 63) | (v6 << (64 - 63)));

            v2 = v2 + v7 + block[15];
            v13 ^= v2;
            v13 = ((v13 >> 32) | (v13 << (64 - 32)));
            v8 = v8 + v13;
            v7 ^= v8;
            v7 = ((v7 >> 24) | (v7 << (64 - 24)));
            v2 = v2 + v7 + block[14];
            v13 ^= v2;
            v13 = ((v13 >> 16) | (v13 << (64 - 16)));
            v8 = v8 + v13;
            v7 ^= v8;
            v7 = ((v7 >> 63) | (v7 << (64 - 63)));

            v3 = v3 + v4 + block[1];
            v14 ^= v3;
            v14 = ((v14 >> 32) | (v14 << (64 - 32)));
            v9 = v9 + v14;
            v4 ^= v9;
            v4 = ((v4 >> 24) | (v4 << (64 - 24)));
            v3 = v3 + v4 + block[9];
            v14 ^= v3;
            v14 = ((v14 >> 16) | (v14 << (64 - 16)));
            v9 = v9 + v14;
            v4 ^= v9;
            v4 = ((v4 >> 63) | (v4 << (64 - 63)));

            // Round 7
            v0 = v0 + v4 + block[12];
            v12 ^= v0;
            v12 = ((v12 >> 32) | (v12 << (64 - 32)));
            v8 = v8 + v12;
            v4 ^= v8;
            v4 = ((v4 >> 24) | (v4 << (64 - 24)));
            v0 = v0 + v4 + block[5];
            v12 ^= v0;
            v12 = ((v12 >> 16) | (v12 << (64 - 16)));
            v8 = v8 + v12;
            v4 ^= v8;
            v4 = ((v4 >> 63) | (v4 << (64 - 63)));

            v1 = v1 + v5 + block[1];
            v13 ^= v1;
            v13 = ((v13 >> 32) | (v13 << (64 - 32)));
            v9 = v9 + v13;
            v5 ^= v9;
            v5 = ((v5 >> 24) | (v5 << (64 - 24)));
            v1 = v1 + v5 + block[15];
            v13 ^= v1;
            v13 = ((v13 >> 16) | (v13 << (64 - 16)));
            v9 = v9 + v13;
            v5 ^= v9;
            v5 = ((v5 >> 63) | (v5 << (64 - 63)));

            v2 = v2 + v6 + block[14];
            v14 ^= v2;
            v14 = ((v14 >> 32) | (v14 << (64 - 32)));
            v10 = v10 + v14;
            v6 ^= v10;
            v6 = ((v6 >> 24) | (v6 << (64 - 24)));
            v2 = v2 + v6 + block[13];
            v14 ^= v2;
            v14 = ((v14 >> 16) | (v14 << (64 - 16)));
            v10 = v10 + v14;
            v6 ^= v10;
            v6 = ((v6 >> 63) | (v6 << (64 - 63)));

            v3 = v3 + v7 + block[4];
            v15 ^= v3;
            v15 = ((v15 >> 32) | (v15 << (64 - 32)));
            v11 = v11 + v15;
            v7 ^= v11;
            v7 = ((v7 >> 24) | (v7 << (64 - 24)));
            v3 = v3 + v7 + block[10];
            v15 ^= v3;
            v15 = ((v15 >> 16) | (v15 << (64 - 16)));
            v11 = v11 + v15;
            v7 ^= v11;
            v7 = ((v7 >> 63) | (v7 << (64 - 63)));

            v0 = v0 + v5 + block[0];
            v15 ^= v0;
            v15 = ((v15 >> 32) | (v15 << (64 - 32)));
            v10 = v10 + v15;
            v5 ^= v10;
            v5 = ((v5 >> 24) | (v5 << (64 - 24)));
            v0 = v0 + v5 + block[7];
            v15 ^= v0;
            v15 = ((v15 >> 16) | (v15 << (64 - 16)));
            v10 = v10 + v15;
            v5 ^= v10;
            v5 = ((v5 >> 63) | (v5 << (64 - 63)));

            v1 = v1 + v6 + block[6];
            v12 ^= v1;
            v12 = ((v12 >> 32) | (v12 << (64 - 32)));
            v11 = v11 + v12;
            v6 ^= v11;
            v6 = ((v6 >> 24) | (v6 << (64 - 24)));
            v1 = v1 + v6 + block[3];
            v12 ^= v1;
            v12 = ((v12 >> 16) | (v12 << (64 - 16)));
            v11 = v11 + v12;
            v6 ^= v11;
            v6 = ((v6 >> 63) | (v6 << (64 - 63)));

            v2 = v2 + v7 + block[9];
            v13 ^= v2;
            v13 = ((v13 >> 32) | (v13 << (64 - 32)));
            v8 = v8 + v13;
            v7 ^= v8;
            v7 = ((v7 >> 24) | (v7 << (64 - 24)));
            v2 = v2 + v7 + block[2];
            v13 ^= v2;
            v13 = ((v13 >> 16) | (v13 << (64 - 16)));
            v8 = v8 + v13;
            v7 ^= v8;
            v7 = ((v7 >> 63) | (v7 << (64 - 63)));

            v3 = v3 + v4 + block[8];
            v14 ^= v3;
            v14 = ((v14 >> 32) | (v14 << (64 - 32)));
            v9 = v9 + v14;
            v4 ^= v9;
            v4 = ((v4 >> 24) | (v4 << (64 - 24)));
            v3 = v3 + v4 + block[11];
            v14 ^= v3;
            v14 = ((v14 >> 16) | (v14 << (64 - 16)));
            v9 = v9 + v14;
            v4 ^= v9;
            v4 = ((v4 >> 63) | (v4 << (64 - 63)));

            // Round 8
            v0 = v0 + v4 + block[13];
            v12 ^= v0;
            v12 = ((v12 >> 32) | (v12 << (64 - 32)));
            v8 = v8 + v12;
            v4 ^= v8;
            v4 = ((v4 >> 24) | (v4 << (64 - 24)));
            v0 = v0 + v4 + block[11];
            v12 ^= v0;
            v12 = ((v12 >> 16) | (v12 << (64 - 16)));
            v8 = v8 + v12;
            v4 ^= v8;
            v4 = ((v4 >> 63) | (v4 << (64 - 63)));

            v1 = v1 + v5 + block[7];
            v13 ^= v1;
            v13 = ((v13 >> 32) | (v13 << (64 - 32)));
            v9 = v9 + v13;
            v5 ^= v9;
            v5 = ((v5 >> 24) | (v5 << (64 - 24)));
            v1 = v1 + v5 + block[14];
            v13 ^= v1;
            v13 = ((v13 >> 16) | (v13 << (64 - 16)));
            v9 = v9 + v13;
            v5 ^= v9;
            v5 = ((v5 >> 63) | (v5 << (64 - 63)));

            v2 = v2 + v6 + block[12];
            v14 ^= v2;
            v14 = ((v14 >> 32) | (v14 << (64 - 32)));
            v10 = v10 + v14;
            v6 ^= v10;
            v6 = ((v6 >> 24) | (v6 << (64 - 24)));
            v2 = v2 + v6 + block[1];
            v14 ^= v2;
            v14 = ((v14 >> 16) | (v14 << (64 - 16)));
            v10 = v10 + v14;
            v6 ^= v10;
            v6 = ((v6 >> 63) | (v6 << (64 - 63)));

            v3 = v3 + v7 + block[3];
            v15 ^= v3;
            v15 = ((v15 >> 32) | (v15 << (64 - 32)));
            v11 = v11 + v15;
            v7 ^= v11;
            v7 = ((v7 >> 24) | (v7 << (64 - 24)));
            v3 = v3 + v7 + block[9];
            v15 ^= v3;
            v15 = ((v15 >> 16) | (v15 << (64 - 16)));
            v11 = v11 + v15;
            v7 ^= v11;
            v7 = ((v7 >> 63) | (v7 << (64 - 63)));

            v0 = v0 + v5 + block[5];
            v15 ^= v0;
            v15 = ((v15 >> 32) | (v15 << (64 - 32)));
            v10 = v10 + v15;
            v5 ^= v10;
            v5 = ((v5 >> 24) | (v5 << (64 - 24)));
            v0 = v0 + v5 + block[0];
            v15 ^= v0;
            v15 = ((v15 >> 16) | (v15 << (64 - 16)));
            v10 = v10 + v15;
            v5 ^= v10;
            v5 = ((v5 >> 63) | (v5 << (64 - 63)));

            v1 = v1 + v6 + block[15];
            v12 ^= v1;
            v12 = ((v12 >> 32) | (v12 << (64 - 32)));
            v11 = v11 + v12;
            v6 ^= v11;
            v6 = ((v6 >> 24) | (v6 << (64 - 24)));
            v1 = v1 + v6 + block[4];
            v12 ^= v1;
            v12 = ((v12 >> 16) | (v12 << (64 - 16)));
            v11 = v11 + v12;
            v6 ^= v11;
            v6 = ((v6 >> 63) | (v6 << (64 - 63)));

            v2 = v2 + v7 + block[8];
            v13 ^= v2;
            v13 = ((v13 >> 32) | (v13 << (64 - 32)));
            v8 = v8 + v13;
            v7 ^= v8;
            v7 = ((v7 >> 24) | (v7 << (64 - 24)));
            v2 = v2 + v7 + block[6];
            v13 ^= v2;
            v13 = ((v13 >> 16) | (v13 << (64 - 16)));
            v8 = v8 + v13;
            v7 ^= v8;
            v7 = ((v7 >> 63) | (v7 << (64 - 63)));

            v3 = v3 + v4 + block[2];
            v14 ^= v3;
            v14 = ((v14 >> 32) | (v14 << (64 - 32)));
            v9 = v9 + v14;
            v4 ^= v9;
            v4 = ((v4 >> 24) | (v4 << (64 - 24)));
            v3 = v3 + v4 + block[10];
            v14 ^= v3;
            v14 = ((v14 >> 16) | (v14 << (64 - 16)));
            v9 = v9 + v14;
            v4 ^= v9;
            v4 = ((v4 >> 63) | (v4 << (64 - 63)));

            // Round 9
            v0 = v0 + v4 + block[6];
            v12 ^= v0;
            v12 = ((v12 >> 32) | (v12 << (64 - 32)));
            v8 = v8 + v12;
            v4 ^= v8;
            v4 = ((v4 >> 24) | (v4 << (64 - 24)));
            v0 = v0 + v4 + block[15];
            v12 ^= v0;
            v12 = ((v12 >> 16) | (v12 << (64 - 16)));
            v8 = v8 + v12;
            v4 ^= v8;
            v4 = ((v4 >> 63) | (v4 << (64 - 63)));

            v1 = v1 + v5 + block[14];
            v13 ^= v1;
            v13 = ((v13 >> 32) | (v13 << (64 - 32)));
            v9 = v9 + v13;
            v5 ^= v9;
            v5 = ((v5 >> 24) | (v5 << (64 - 24)));
            v1 = v1 + v5 + block[9];
            v13 ^= v1;
            v13 = ((v13 >> 16) | (v13 << (64 - 16)));
            v9 = v9 + v13;
            v5 ^= v9;
            v5 = ((v5 >> 63) | (v5 << (64 - 63)));

            v2 = v2 + v6 + block[11];
            v14 ^= v2;
            v14 = ((v14 >> 32) | (v14 << (64 - 32)));
            v10 = v10 + v14;
            v6 ^= v10;
            v6 = ((v6 >> 24) | (v6 << (64 - 24)));
            v2 = v2 + v6 + block[3];
            v14 ^= v2;
            v14 = ((v14 >> 16) | (v14 << (64 - 16)));
            v10 = v10 + v14;
            v6 ^= v10;
            v6 = ((v6 >> 63) | (v6 << (64 - 63)));

            v3 = v3 + v7 + block[0];
            v15 ^= v3;
            v15 = ((v15 >> 32) | (v15 << (64 - 32)));
            v11 = v11 + v15;
            v7 ^= v11;
            v7 = ((v7 >> 24) | (v7 << (64 - 24)));
            v3 = v3 + v7 + block[8];
            v15 ^= v3;
            v15 = ((v15 >> 16) | (v15 << (64 - 16)));
            v11 = v11 + v15;
            v7 ^= v11;
            v7 = ((v7 >> 63) | (v7 << (64 - 63)));

            v0 = v0 + v5 + block[12];
            v15 ^= v0;
            v15 = ((v15 >> 32) | (v15 << (64 - 32)));
            v10 = v10 + v15;
            v5 ^= v10;
            v5 = ((v5 >> 24) | (v5 << (64 - 24)));
            v0 = v0 + v5 + block[2];
            v15 ^= v0;
            v15 = ((v15 >> 16) | (v15 << (64 - 16)));
            v10 = v10 + v15;
            v5 ^= v10;
            v5 = ((v5 >> 63) | (v5 << (64 - 63)));

            v1 = v1 + v6 + block[13];
            v12 ^= v1;
            v12 = ((v12 >> 32) | (v12 << (64 - 32)));
            v11 = v11 + v12;
            v6 ^= v11;
            v6 = ((v6 >> 24) | (v6 << (64 - 24)));
            v1 = v1 + v6 + block[7];
            v12 ^= v1;
            v12 = ((v12 >> 16) | (v12 << (64 - 16)));
            v11 = v11 + v12;
            v6 ^= v11;
            v6 = ((v6 >> 63) | (v6 << (64 - 63)));

            v2 = v2 + v7 + block[1];
            v13 ^= v2;
            v13 = ((v13 >> 32) | (v13 << (64 - 32)));
            v8 = v8 + v13;
            v7 ^= v8;
            v7 = ((v7 >> 24) | (v7 << (64 - 24)));
            v2 = v2 + v7 + block[4];
            v13 ^= v2;
            v13 = ((v13 >> 16) | (v13 << (64 - 16)));
            v8 = v8 + v13;
            v7 ^= v8;
            v7 = ((v7 >> 63) | (v7 << (64 - 63)));

            v3 = v3 + v4 + block[10];
            v14 ^= v3;
            v14 = ((v14 >> 32) | (v14 << (64 - 32)));
            v9 = v9 + v14;
            v4 ^= v9;
            v4 = ((v4 >> 24) | (v4 << (64 - 24)));
            v3 = v3 + v4 + block[5];
            v14 ^= v3;
            v14 = ((v14 >> 16) | (v14 << (64 - 16)));
            v9 = v9 + v14;
            v4 ^= v9;
            v4 = ((v4 >> 63) | (v4 << (64 - 63)));

            // Round 10
            v0 = v0 + v4 + block[10];
            v12 ^= v0;
            v12 = ((v12 >> 32) | (v12 << (64 - 32)));
            v8 = v8 + v12;
            v4 ^= v8;
            v4 = ((v4 >> 24) | (v4 << (64 - 24)));
            v0 = v0 + v4 + block[2];
            v12 ^= v0;
            v12 = ((v12 >> 16) | (v12 << (64 - 16)));
            v8 = v8 + v12;
            v4 ^= v8;
            v4 = ((v4 >> 63) | (v4 << (64 - 63)));

            v1 = v1 + v5 + block[8];
            v13 ^= v1;
            v13 = ((v13 >> 32) | (v13 << (64 - 32)));
            v9 = v9 + v13;
            v5 ^= v9;
            v5 = ((v5 >> 24) | (v5 << (64 - 24)));
            v1 = v1 + v5 + block[4];
            v13 ^= v1;
            v13 = ((v13 >> 16) | (v13 << (64 - 16)));
            v9 = v9 + v13;
            v5 ^= v9;
            v5 = ((v5 >> 63) | (v5 << (64 - 63)));

            v2 = v2 + v6 + block[7];
            v14 ^= v2;
            v14 = ((v14 >> 32) | (v14 << (64 - 32)));
            v10 = v10 + v14;
            v6 ^= v10;
            v6 = ((v6 >> 24) | (v6 << (64 - 24)));
            v2 = v2 + v6 + block[6];
            v14 ^= v2;
            v14 = ((v14 >> 16) | (v14 << (64 - 16)));
            v10 = v10 + v14;
            v6 ^= v10;
            v6 = ((v6 >> 63) | (v6 << (64 - 63)));

            v3 = v3 + v7 + block[1];
            v15 ^= v3;
            v15 = ((v15 >> 32) | (v15 << (64 - 32)));
            v11 = v11 + v15;
            v7 ^= v11;
            v7 = ((v7 >> 24) | (v7 << (64 - 24)));
            v3 = v3 + v7 + block[5];
            v15 ^= v3;
            v15 = ((v15 >> 16) | (v15 << (64 - 16)));
            v11 = v11 + v15;
            v7 ^= v11;
            v7 = ((v7 >> 63) | (v7 << (64 - 63)));

            v0 = v0 + v5 + block[15];
            v15 ^= v0;
            v15 = ((v15 >> 32) | (v15 << (64 - 32)));
            v10 = v10 + v15;
            v5 ^= v10;
            v5 = ((v5 >> 24) | (v5 << (64 - 24)));
            v0 = v0 + v5 + block[11];
            v15 ^= v0;
            v15 = ((v15 >> 16) | (v15 << (64 - 16)));
            v10 = v10 + v15;
            v5 ^= v10;
            v5 = ((v5 >> 63) | (v5 << (64 - 63)));

            v1 = v1 + v6 + block[9];
            v12 ^= v1;
            v12 = ((v12 >> 32) | (v12 << (64 - 32)));
            v11 = v11 + v12;
            v6 ^= v11;
            v6 = ((v6 >> 24) | (v6 << (64 - 24)));
            v1 = v1 + v6 + block[14];
            v12 ^= v1;
            v12 = ((v12 >> 16) | (v12 << (64 - 16)));
            v11 = v11 + v12;
            v6 ^= v11;
            v6 = ((v6 >> 63) | (v6 << (64 - 63)));

            v2 = v2 + v7 + block[3];
            v13 ^= v2;
            v13 = ((v13 >> 32) | (v13 << (64 - 32)));
            v8 = v8 + v13;
            v7 ^= v8;
            v7 = ((v7 >> 24) | (v7 << (64 - 24)));
            v2 = v2 + v7 + block[12];
            v13 ^= v2;
            v13 = ((v13 >> 16) | (v13 << (64 - 16)));
            v8 = v8 + v13;
            v7 ^= v8;
            v7 = ((v7 >> 63) | (v7 << (64 - 63)));

            v3 = v3 + v4 + block[13];
            v14 ^= v3;
            v14 = ((v14 >> 32) | (v14 << (64 - 32)));
            v9 = v9 + v14;
            v4 ^= v9;
            v4 = ((v4 >> 24) | (v4 << (64 - 24)));
            v3 = v3 + v4 + block[0];
            v14 ^= v3;
            v14 = ((v14 >> 16) | (v14 << (64 - 16)));
            v9 = v9 + v14;
            v4 ^= v9;
            v4 = ((v4 >> 63) | (v4 << (64 - 63)));

            // Round 11
            v0 = v0 + v4 + block[0];
            v12 ^= v0;
            v12 = ((v12 >> 32) | (v12 << (64 - 32)));
            v8 = v8 + v12;
            v4 ^= v8;
            v4 = ((v4 >> 24) | (v4 << (64 - 24)));
            v0 = v0 + v4 + block[1];
            v12 ^= v0;
            v12 = ((v12 >> 16) | (v12 << (64 - 16)));
            v8 = v8 + v12;
            v4 ^= v8;
            v4 = ((v4 >> 63) | (v4 << (64 - 63)));

            v1 = v1 + v5 + block[2];
            v13 ^= v1;
            v13 = ((v13 >> 32) | (v13 << (64 - 32)));
            v9 = v9 + v13;
            v5 ^= v9;
            v5 = ((v5 >> 24) | (v5 << (64 - 24)));
            v1 = v1 + v5 + block[3];
            v13 ^= v1;
            v13 = ((v13 >> 16) | (v13 << (64 - 16)));
            v9 = v9 + v13;
            v5 ^= v9;
            v5 = ((v5 >> 63) | (v5 << (64 - 63)));

            v2 = v2 + v6 + block[4];
            v14 ^= v2;
            v14 = ((v14 >> 32) | (v14 << (64 - 32)));
            v10 = v10 + v14;
            v6 ^= v10;
            v6 = ((v6 >> 24) | (v6 << (64 - 24)));
            v2 = v2 + v6 + block[5];
            v14 ^= v2;
            v14 = ((v14 >> 16) | (v14 << (64 - 16)));
            v10 = v10 + v14;
            v6 ^= v10;
            v6 = ((v6 >> 63) | (v6 << (64 - 63)));

            v3 = v3 + v7 + block[6];
            v15 ^= v3;
            v15 = ((v15 >> 32) | (v15 << (64 - 32)));
            v11 = v11 + v15;
            v7 ^= v11;
            v7 = ((v7 >> 24) | (v7 << (64 - 24)));
            v3 = v3 + v7 + block[7];
            v15 ^= v3;
            v15 = ((v15 >> 16) | (v15 << (64 - 16)));
            v11 = v11 + v15;
            v7 ^= v11;
            v7 = ((v7 >> 63) | (v7 << (64 - 63)));

            v0 = v0 + v5 + block[8];
            v15 ^= v0;
            v15 = ((v15 >> 32) | (v15 << (64 - 32)));
            v10 = v10 + v15;
            v5 ^= v10;
            v5 = ((v5 >> 24) | (v5 << (64 - 24)));
            v0 = v0 + v5 + block[9];
            v15 ^= v0;
            v15 = ((v15 >> 16) | (v15 << (64 - 16)));
            v10 = v10 + v15;
            v5 ^= v10;
            v5 = ((v5 >> 63) | (v5 << (64 - 63)));

            v1 = v1 + v6 + block[10];
            v12 ^= v1;
            v12 = ((v12 >> 32) | (v12 << (64 - 32)));
            v11 = v11 + v12;
            v6 ^= v11;
            v6 = ((v6 >> 24) | (v6 << (64 - 24)));
            v1 = v1 + v6 + block[11];
            v12 ^= v1;
            v12 = ((v12 >> 16) | (v12 << (64 - 16)));
            v11 = v11 + v12;
            v6 ^= v11;
            v6 = ((v6 >> 63) | (v6 << (64 - 63)));

            v2 = v2 + v7 + block[12];
            v13 ^= v2;
            v13 = ((v13 >> 32) | (v13 << (64 - 32)));
            v8 = v8 + v13;
            v7 ^= v8;
            v7 = ((v7 >> 24) | (v7 << (64 - 24)));
            v2 = v2 + v7 + block[13];
            v13 ^= v2;
            v13 = ((v13 >> 16) | (v13 << (64 - 16)));
            v8 = v8 + v13;
            v7 ^= v8;
            v7 = ((v7 >> 63) | (v7 << (64 - 63)));

            v3 = v3 + v4 + block[14];
            v14 ^= v3;
            v14 = ((v14 >> 32) | (v14 << (64 - 32)));
            v9 = v9 + v14;
            v4 ^= v9;
            v4 = ((v4 >> 24) | (v4 << (64 - 24)));
            v3 = v3 + v4 + block[15];
            v14 ^= v3;
            v14 = ((v14 >> 16) | (v14 << (64 - 16)));
            v9 = v9 + v14;
            v4 ^= v9;
            v4 = ((v4 >> 63) | (v4 << (64 - 63)));

            // Round 12 (finally)
            v0 = v0 + v4 + block[14];
            v12 ^= v0;
            v12 = ((v12 >> 32) | (v12 << (64 - 32)));
            v8 = v8 + v12;
            v4 ^= v8;
            v4 = ((v4 >> 24) | (v4 << (64 - 24)));
            v0 = v0 + v4 + block[10];
            v12 ^= v0;
            v12 = ((v12 >> 16) | (v12 << (64 - 16)));
            v8 = v8 + v12;
            v4 ^= v8;
            v4 = ((v4 >> 63) | (v4 << (64 - 63)));

            v1 = v1 + v5 + block[4];
            v13 ^= v1;
            v13 = ((v13 >> 32) | (v13 << (64 - 32)));
            v9 = v9 + v13;
            v5 ^= v9;
            v5 = ((v5 >> 24) | (v5 << (64 - 24)));
            v1 = v1 + v5 + block[8];
            v13 ^= v1;
            v13 = ((v13 >> 16) | (v13 << (64 - 16)));
            v9 = v9 + v13;
            v5 ^= v9;
            v5 = ((v5 >> 63) | (v5 << (64 - 63)));

            v2 = v2 + v6 + block[9];
            v14 ^= v2;
            v14 = ((v14 >> 32) | (v14 << (64 - 32)));
            v10 = v10 + v14;
            v6 ^= v10;
            v6 = ((v6 >> 24) | (v6 << (64 - 24)));
            v2 = v2 + v6 + block[15];
            v14 ^= v2;
            v14 = ((v14 >> 16) | (v14 << (64 - 16)));
            v10 = v10 + v14;
            v6 ^= v10;
            v6 = ((v6 >> 63) | (v6 << (64 - 63)));

            v3 = v3 + v7 + block[13];
            v15 ^= v3;
            v15 = ((v15 >> 32) | (v15 << (64 - 32)));
            v11 = v11 + v15;
            v7 ^= v11;
            v7 = ((v7 >> 24) | (v7 << (64 - 24)));
            v3 = v3 + v7 + block[6];
            v15 ^= v3;
            v15 = ((v15 >> 16) | (v15 << (64 - 16)));
            v11 = v11 + v15;
            v7 ^= v11;
            v7 = ((v7 >> 63) | (v7 << (64 - 63)));

            v0 = v0 + v5 + block[1];
            v15 ^= v0;
            v15 = ((v15 >> 32) | (v15 << (64 - 32)));
            v10 = v10 + v15;
            v5 ^= v10;
            v5 = ((v5 >> 24) | (v5 << (64 - 24)));
            v0 = v0 + v5 + block[12];
            v15 ^= v0;
            v15 = ((v15 >> 16) | (v15 << (64 - 16)));
            v10 = v10 + v15;
            v5 ^= v10;
            v5 = ((v5 >> 63) | (v5 << (64 - 63)));

            v1 = v1 + v6 + block[0];
            v12 ^= v1;
            v12 = ((v12 >> 32) | (v12 << (64 - 32)));
            v11 = v11 + v12;
            v6 ^= v11;
            v6 = ((v6 >> 24) | (v6 << (64 - 24)));
            v1 = v1 + v6 + block[2];
            v12 ^= v1;
            v12 = ((v12 >> 16) | (v12 << (64 - 16)));
            v11 = v11 + v12;
            v6 ^= v11;
            v6 = ((v6 >> 63) | (v6 << (64 - 63)));

            v2 = v2 + v7 + block[11];
            v13 ^= v2;
            v13 = ((v13 >> 32) | (v13 << (64 - 32)));
            v8 = v8 + v13;
            v7 ^= v8;
            v7 = ((v7 >> 24) | (v7 << (64 - 24)));
            v2 = v2 + v7 + block[7];
            v13 ^= v2;
            v13 = ((v13 >> 16) | (v13 << (64 - 16)));
            v8 = v8 + v13;
            v7 ^= v8;
            v7 = ((v7 >> 63) | (v7 << (64 - 63)));

            v3 = v3 + v4 + block[5];
            v14 ^= v3;
            v14 = ((v14 >> 32) | (v14 << (64 - 32)));
            v9 = v9 + v14;
            v4 ^= v9;
            v4 = ((v4 >> 24) | (v4 << (64 - 24)));
            v3 = v3 + v4 + block[3];
            v14 ^= v3;
            v14 = ((v14 >> 16) | (v14 << (64 - 16)));
            v9 = v9 + v14;
            v4 ^= v9;
            v4 = ((v4 >> 63) | (v4 << (64 - 63)));

            state[0] ^= v0 ^ v8;
            state[1] ^= v1 ^ v9;
            state[2] ^= v2 ^ v10;
            state[3] ^= v3 ^ v11;
            state[4] ^= v4 ^ v12;
            state[5] ^= v5 ^ v13;
            state[6] ^= v6 ^ v14;
            state[7] ^= v7 ^ v15;
        }
    }
}
